extends ../layout
block content
	style.
		.axis path, .axix line{
		fill: none;
		stroke:#0f0;
		shape-rendering: crispEdges;
		}
		.tick {
		font: 10px sans-serif;
		}
	script.
		var height = 230;
		var width = 300;
		var svg = d3.select('body').append('svg')
		.attr("width", width)
		.attr("height", height);
		var svg_data = svg.append('g').attr('class', 'data');
		var svg_dataline = svg_data.append('g').attr('class', 'data-line');
		var svg_legendline = svg_data.append('g').attr('class', 'legend-line');
		var svg_plot = svg_data.append('g').attr('class', 'plot');
		var svg_axis = svg.append('g').attr('class', 'axis');
		var svg_x_axis = svg_axis.append('g').attr('class', 'x-axis');
		var svg_y_axis = svg_axis.append('g').attr('class', 'y-axis');
		// margin
		var margin = {top: 20, right: 20, bottom: 20, left: 40};
		// Data
		var data = [
		[{x:0, y:0.3}, {x:(0.45-0.3)*2/3/(2/3-0.3), y: 0.45}], //10⁷
		[{x:0, y:0.325}, {x:(.45-0.325)*0.667/(2/3-0.325), y:0.45}], //10⁶
		[{x:0, y:0.350}, {x:(0.45-0.35)*2/3/(2/3-0.35), y:0.45}], //10⁵
		[{x:0, y:0.3625}, {x:(0.45-0.3625)*2/3/(2/3-0.3625), y:0.45}],//6x10⁴
		[{x:0, y:0.3750}, {x:(0.45-0.375)*2/3/(2/3-0.375), y:0.45}],//4x10⁴
		[{x:0, y:0.3875}, {x:(0.45-0.3875)*2/3/(2/3-0.3875), y:0.45}],//3x10⁴
		[{x:0, y:0.4125}, {x:(0.45-0.4125)*2/3/(2/3-0.4125), y:0.45}],//2x10⁴
		[{x:0, y:0.45}, {x: 2/3, y:2/3}] //10⁴
		];

		var dataOver = [
		[{x:(0.45-0.3)*2/3/(2/3-0.3), y:0.45},{x: 2/3, y: 2/3}], //10⁷
		[{x:(0.45-0.325)*0.667/(2/3-0.325), y:0.45},{x: 2/3, y: 2/3}], //10⁶
		[{x:(0.45-0.35)*2/3/(2/3-0.35), y:0.45},{x: 2/3, y: 2/3}], //10⁵
		[{x:(0.45-0.3625)*2/3/(2/3-0.3625), y:0.45},{x: 2/3, y: 2/3}],//6x10⁴
		[{x:(0.45-0.375)*2/3/(2/3-0.375), y:0.45},{x: 2/3, y: 2/3}],//4x10⁴
		[{x:(0.45-0.3875)*2/3/(2/3-0.3875), y:0.45},{x: 2/3, y: 2/3}],//3x10⁴
		[{x:(0.45-0.4125)*2/3/(2/3-0.4125), y:0.45},{x: 2/3, y: 2/3}]//2x10⁴
		];


		var baseline =[
		[{x:0, y:0}, {x: 0.7, y: 0.7}],
		[{x: 0, y: 0.45}, {x: 0.45, y:0.45}]
		];
		var outerline =[
		[{x:0, y: 2/3}, {x: 2/3, y: 2/3}],
		[{x:2/3, y: 0}, {x: 2/3, y: 2/3}]
		];

		var x_scale = d3.scale.linear()
		.domain([0,0.7])
		.range([margin.left, width-margin.right])
		.nice();
		var y_scale = d3.scale.linear()
		.domain([0,0.7])
		.range([height - margin.bottom, margin.top])
		.nice();
		var x_axis = d3.svg.axis()
		.scale(x_scale)
		.orient('bottom')
		.ticks(7);
		var axis_x_height =  height -  margin.bottom ;
		svg_x_axis
			.attr("transform", "translate(0, " + axis_x_height + ")")
			.call(x_axis);
		var y_axis = d3.svg.axis()
		.scale(y_scale)
		.orient('left')
		.ticks(7);
		svg_y_axis
			.attr("transform", "translate(" + margin.left + ")")
			.call(y_axis);

		var line = d3.svg.line()
		.x(function(d){ return x_scale(d.x); })
		.y(function(d){ return y_scale(d.y); })
			.interpolate('linear');
		var colorScale = d3.scale.category10();

		svg.select('.data-line')
		.selectAll('path')
		.data(data)
		.enter()
		.append("path")
		.attr('class', 'line')
		.attr("d", line)
		.style("stroke", function (d,i){ return colorScale(i);} )
		.style("stroke-width", '1px')
		.style("stroke-dasharray", function (d,i) { return i < 7? '9,0': '9,5'; });

		svg.select('.data')
		.selectAll('.line-over')
		.data(dataOver)
		.enter()
		.append("path")
		.attr('class', 'line-over')
		.attr("d", line)
		.style("stroke", function (d,i){ return colorScale(i);} )
		.style("stroke-width", '1px')
		.style("stroke-dasharray", '9,5');

		svg.select('.data')
		.selectAll('.baseline')
		.data(baseline)
		.enter()
		.append("path")
		.attr('class', '.baseline')
		.attr("d", line)
		.style("stroke", "#00f" )
		.style("stroke-opacity", "0.3")
		.style("stroke-width", '1.5px');

		svg.select('.data')
		.selectAll('.outerline')
		.data(outerline)
		.enter()
		.append("path")
		.attr('class', '.outerline')
		.attr("d", line)
		.style("stroke", "#000" )
		.style("stroke-opacity", "0.3")
		.style("stroke-width", '1.5px');

		var textpath = svg.select('.data-line')
		.selectAll('path');

		for(var j=0; j<textpath[0].length; j++){
			textpath.select(function (d,i){ return i === j? this: null; }).attr('id', 'path'+j)}

		var tag = [
		{name:'10⁷', id: '#path0', start:0.5}, {name:'10⁶', id: '#path1', start: 0.1},
		{name:'10⁵', id: '#path2', start: 0.4}, {name:'3x10⁴', id: '#path3', start: 1},
		{name:'4x10⁴', id: '#path4', start: 0} ,{name:'6x10⁴', id: '#path5', start:0 },
		{name:'2x10⁴', id: '#path6', start: 0}, {name:'10⁴', id: '#path7', start: 0.2}
		];
		svg.select('.data')
		.selectAll('text')
		.data(tag)
		.enter()
		.append('text')
		.attr('class', 'tag')
		.append('textPath')
		.attr('xlink:href', function(d){ return d.id; })
		.attr('startOffset', function(d){ return d.start; })
		.text(function(d){ return d.name; });
		/*
		svg.selectAll('.tag')
		.select(function(d){return d.id =='#path3'? this: null; })
		.attr("transform", "translate(-30,0 )");
		*/
		svg.selectAll('.tag')
		.select(function(d){return d.id =='#path4'? this: null; })
		.attr("transform", "translate(-30,12.5 )");

		svg.selectAll('.tag')
		.select(function(d){return d.id =='#path5'? this: null; })
		.attr("transform", "translate(-30,25 )");




		// add a circle in the graph

		var plotdata = [{x: 0.2, y: 0.5}];

		svg.select('.plot')
		.selectAll('circle')
		.data(plotdata)
		.enter()
		.append('circle')
		.attr('class', 'plot')
		.attr('r', '5')
		.attr('cx', function (d){ return x_scale(d.x); })
		.attr('cy', function (d){ return y_scale(d.y); })
		.style('fill', '#f0f');

		svg.select('.plot')
		.selectAll('cirlce').data(plotdata)
		.exit()
		.remove();


